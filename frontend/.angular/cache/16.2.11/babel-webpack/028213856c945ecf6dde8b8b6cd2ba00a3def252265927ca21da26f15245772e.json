{"ast":null,"code":"import { DOCUMENT } from \"@angular/common\";\nimport { BehaviorSubject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nexport class MenuService {\n  constructor(document) {\n    this.document = document;\n    this.isDayToggle = new BehaviorSubject(true);\n    this.logoUrl = new BehaviorSubject(\"../../../assets/logo.svg\");\n    this.storage = sessionStorage;\n  }\n  changeNightDayTheme() {\n    const mainSections = this.document.querySelectorAll(\".main-section\");\n    const header = this.document.getElementById(\"header-wrapper\");\n    if (this.storage.getItem(\"dayMode\") == \"true\") {\n      mainSections.forEach(el => {\n        if (el.classList.contains(\"night-theme\")) {\n          el.classList.remove(\"night-theme\");\n        }\n      });\n      if (header.classList.contains(\"night-theme\")) {\n        header.classList.remove(\"night-theme\");\n      }\n      this.logoUrl.next(\"../../../assets/logo.svg\");\n    } else {\n      mainSections.forEach(el => {\n        el.classList.add(\"night-theme\");\n      });\n      header.classList.add(\"night-theme\");\n      this.isDayToggle.next(false);\n      this.logoUrl.next(\"../../../assets/logo-dark.svg\");\n    }\n  }\n  toggleNightDayState() {\n    if (this.storage.getItem(\"dayMode\") == \"true\") {\n      this.storage.setItem(\"dayMode\", \"false\");\n    } else {\n      this.storage.setItem(\"dayMode\", \"true\");\n    }\n  }\n  static #_ = this.ɵfac = function MenuService_Factory(t) {\n    return new (t || MenuService)(i0.ɵɵinject(DOCUMENT));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MenuService,\n    factory: MenuService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"names":["DOCUMENT","BehaviorSubject","MenuService","constructor","document","isDayToggle","logoUrl","storage","sessionStorage","changeNightDayTheme","mainSections","querySelectorAll","header","getElementById","getItem","forEach","el","classList","contains","remove","next","add","toggleNightDayState","setItem","_","i0","ɵɵinject","_2","factory","ɵfac","providedIn"],"sources":["/Users/linhdo/Documents/Personal-Website/Personal-Website/frontend/src/app/services/menu.service.ts"],"sourcesContent":["import { DOCUMENT } from \"@angular/common\";\nimport { Inject, Injectable } from \"@angular/core\";\nimport { BehaviorSubject } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class MenuService {\n    isDayToggle: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\n    logoUrl: BehaviorSubject<string> = new BehaviorSubject<string>(\"../../../assets/logo.svg\");\n    storage: Storage = sessionStorage;\n  constructor(@Inject(DOCUMENT) private document: Document) {}\n\n  changeNightDayTheme(){\n    const mainSections = this.document.querySelectorAll(\".main-section\");\n    const header = this.document.getElementById(\"header-wrapper\");\n    if (this.storage.getItem(\"dayMode\") == \"true\") {\n      mainSections.forEach((el) => {\n        if (el.classList.contains(\"night-theme\")) {\n            el.classList.remove(\"night-theme\");\n        }\n      });\n      if (header!.classList.contains(\"night-theme\")){\n        header!.classList.remove(\"night-theme\");\n      }\n      this.logoUrl.next(\"../../../assets/logo.svg\");\n    } else {\n      mainSections.forEach((el) => {\n        el.classList.add(\"night-theme\");\n      });\n      header!.classList.add(\"night-theme\");\n      this.isDayToggle.next(false);\n      this.logoUrl.next(\"../../../assets/logo-dark.svg\");\n    }\n  }\n\n  toggleNightDayState(){\n    if (this.storage.getItem(\"dayMode\") == \"true\") {\n        this.storage.setItem(\"dayMode\", \"false\");\n      } else {\n        this.storage.setItem(\"dayMode\", \"true\");\n      }\n  }\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,iBAAiB;AAE1C,SAASC,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,WAAW;EAItBC,YAAsCC,QAAkB;IAAlB,KAAAA,QAAQ,GAARA,QAAQ;IAH5C,KAAAC,WAAW,GAA6B,IAAIJ,eAAe,CAAU,IAAI,CAAC;IAC1E,KAAAK,OAAO,GAA4B,IAAIL,eAAe,CAAS,0BAA0B,CAAC;IAC1F,KAAAM,OAAO,GAAYC,cAAc;EACwB;EAE3DC,mBAAmBA,CAAA;IACjB,MAAMC,YAAY,GAAG,IAAI,CAACN,QAAQ,CAACO,gBAAgB,CAAC,eAAe,CAAC;IACpE,MAAMC,MAAM,GAAG,IAAI,CAACR,QAAQ,CAACS,cAAc,CAAC,gBAAgB,CAAC;IAC7D,IAAI,IAAI,CAACN,OAAO,CAACO,OAAO,CAAC,SAAS,CAAC,IAAI,MAAM,EAAE;MAC7CJ,YAAY,CAACK,OAAO,CAAEC,EAAE,IAAI;QAC1B,IAAIA,EAAE,CAACC,SAAS,CAACC,QAAQ,CAAC,aAAa,CAAC,EAAE;UACtCF,EAAE,CAACC,SAAS,CAACE,MAAM,CAAC,aAAa,CAAC;;MAExC,CAAC,CAAC;MACF,IAAIP,MAAO,CAACK,SAAS,CAACC,QAAQ,CAAC,aAAa,CAAC,EAAC;QAC5CN,MAAO,CAACK,SAAS,CAACE,MAAM,CAAC,aAAa,CAAC;;MAEzC,IAAI,CAACb,OAAO,CAACc,IAAI,CAAC,0BAA0B,CAAC;KAC9C,MAAM;MACLV,YAAY,CAACK,OAAO,CAAEC,EAAE,IAAI;QAC1BA,EAAE,CAACC,SAAS,CAACI,GAAG,CAAC,aAAa,CAAC;MACjC,CAAC,CAAC;MACFT,MAAO,CAACK,SAAS,CAACI,GAAG,CAAC,aAAa,CAAC;MACpC,IAAI,CAAChB,WAAW,CAACe,IAAI,CAAC,KAAK,CAAC;MAC5B,IAAI,CAACd,OAAO,CAACc,IAAI,CAAC,+BAA+B,CAAC;;EAEtD;EAEAE,mBAAmBA,CAAA;IACjB,IAAI,IAAI,CAACf,OAAO,CAACO,OAAO,CAAC,SAAS,CAAC,IAAI,MAAM,EAAE;MAC3C,IAAI,CAACP,OAAO,CAACgB,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC;KACzC,MAAM;MACL,IAAI,CAAChB,OAAO,CAACgB,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC;;EAE7C;EAAC,QAAAC,CAAA,G;qBAnCUtB,WAAW,EAAAuB,EAAA,CAAAC,QAAA,CAIF1B,QAAQ;EAAA;EAAA,QAAA2B,EAAA,G;WAJjBzB,WAAW;IAAA0B,OAAA,EAAX1B,WAAW,CAAA2B,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}