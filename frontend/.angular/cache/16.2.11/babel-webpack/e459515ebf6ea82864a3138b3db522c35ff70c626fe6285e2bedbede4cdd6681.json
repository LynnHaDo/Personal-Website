{"ast":null,"code":"import { DOCUMENT } from \"@angular/common\";\nimport { BehaviorSubject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nexport class MenuService {\n  constructor(document) {\n    this.document = document;\n    this.isDayToggle = new BehaviorSubject(true);\n    this.storage = sessionStorage;\n  }\n  changeNightDayTheme() {\n    const document = this.document.getRootNode();\n    const mainSections = this.document.querySelectorAll(\".main-section\");\n    const header = this.document.getElementById(\"header-wrapper\");\n    const navItems = this.document.querySelectorAll(\".menus li\");\n    if (this.storage.getItem(\"dayMode\") == \"true\") {\n      document.classList.add;\n      mainSections.forEach(el => {\n        if (el.classList.contains(\"night-theme\")) {\n          el.classList.remove(\"night-theme\");\n        }\n      });\n      navItems.forEach(el => {\n        if (el.classList.contains(\"filter-white\")) {\n          el.classList.remove(\"filter-white\");\n        }\n      });\n      if (header.classList.contains(\"night-theme\")) {\n        header.classList.remove(\"night-theme\");\n      }\n    } else {\n      mainSections.forEach(el => {\n        el.classList.add(\"night-theme\");\n      });\n      navItems.forEach(el => {\n        el.classList.add(\"filter-white\");\n      });\n      header.classList.add(\"night-theme\");\n    }\n  }\n  toggleNightDayState() {\n    if (this.storage.getItem(\"dayMode\") == \"true\") {\n      this.storage.setItem(\"dayMode\", \"false\");\n      this.isDayToggle.next(false);\n    } else {\n      this.storage.setItem(\"dayMode\", \"true\");\n      this.isDayToggle.next(true);\n    }\n  }\n  static #_ = this.ɵfac = function MenuService_Factory(t) {\n    return new (t || MenuService)(i0.ɵɵinject(DOCUMENT));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MenuService,\n    factory: MenuService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"names":["DOCUMENT","BehaviorSubject","MenuService","constructor","document","isDayToggle","storage","sessionStorage","changeNightDayTheme","getRootNode","mainSections","querySelectorAll","header","getElementById","navItems","getItem","classList","add","forEach","el","contains","remove","toggleNightDayState","setItem","next","_","i0","ɵɵinject","_2","factory","ɵfac","providedIn"],"sources":["/Users/linhdo/Documents/Personal-Website/Personal-Website/frontend/src/app/services/menu.service.ts"],"sourcesContent":["import { DOCUMENT } from \"@angular/common\";\nimport { Inject, Injectable } from \"@angular/core\";\nimport { BehaviorSubject } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class MenuService {\n  isDayToggle: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\n  storage: Storage = sessionStorage;\n  constructor(@Inject(DOCUMENT) private document: Document) {}\n\n  changeNightDayTheme() {\n    const document = this.document.getRootNode();\n    const mainSections = this.document.querySelectorAll(\".main-section\");\n    const header = this.document.getElementById(\"header-wrapper\");\n    const navItems = this.document.querySelectorAll(\".menus li\");\n    if (this.storage.getItem(\"dayMode\") == \"true\") {\n        document.classList.add\n      mainSections.forEach((el) => {\n        if (el.classList.contains(\"night-theme\")) {\n          el.classList.remove(\"night-theme\");\n        }\n      });\n      navItems.forEach((el) => {\n        if (el.classList.contains(\"filter-white\")) {\n          el.classList.remove(\"filter-white\");\n        }\n      });\n      if (header!.classList.contains(\"night-theme\")) {\n        header!.classList.remove(\"night-theme\");\n      }\n    } else {\n      mainSections.forEach((el) => {\n        el.classList.add(\"night-theme\");\n      });\n      navItems.forEach((el) => {\n        el.classList.add(\"filter-white\");\n      });\n      header!.classList.add(\"night-theme\");\n    }\n  }\n\n  toggleNightDayState() {\n    if (this.storage.getItem(\"dayMode\") == \"true\") {\n      this.storage.setItem(\"dayMode\", \"false\");\n      this.isDayToggle.next(false);\n    } else {\n      this.storage.setItem(\"dayMode\", \"true\");\n      this.isDayToggle.next(true);\n    }\n  }\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,iBAAiB;AAE1C,SAASC,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,WAAW;EAGtBC,YAAsCC,QAAkB;IAAlB,KAAAA,QAAQ,GAARA,QAAQ;IAF9C,KAAAC,WAAW,GAA6B,IAAIJ,eAAe,CAAU,IAAI,CAAC;IAC1E,KAAAK,OAAO,GAAYC,cAAc;EAC0B;EAE3DC,mBAAmBA,CAAA;IACjB,MAAMJ,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACK,WAAW,EAAE;IAC5C,MAAMC,YAAY,GAAG,IAAI,CAACN,QAAQ,CAACO,gBAAgB,CAAC,eAAe,CAAC;IACpE,MAAMC,MAAM,GAAG,IAAI,CAACR,QAAQ,CAACS,cAAc,CAAC,gBAAgB,CAAC;IAC7D,MAAMC,QAAQ,GAAG,IAAI,CAACV,QAAQ,CAACO,gBAAgB,CAAC,WAAW,CAAC;IAC5D,IAAI,IAAI,CAACL,OAAO,CAACS,OAAO,CAAC,SAAS,CAAC,IAAI,MAAM,EAAE;MAC3CX,QAAQ,CAACY,SAAS,CAACC,GAAG;MACxBP,YAAY,CAACQ,OAAO,CAAEC,EAAE,IAAI;QAC1B,IAAIA,EAAE,CAACH,SAAS,CAACI,QAAQ,CAAC,aAAa,CAAC,EAAE;UACxCD,EAAE,CAACH,SAAS,CAACK,MAAM,CAAC,aAAa,CAAC;;MAEtC,CAAC,CAAC;MACFP,QAAQ,CAACI,OAAO,CAAEC,EAAE,IAAI;QACtB,IAAIA,EAAE,CAACH,SAAS,CAACI,QAAQ,CAAC,cAAc,CAAC,EAAE;UACzCD,EAAE,CAACH,SAAS,CAACK,MAAM,CAAC,cAAc,CAAC;;MAEvC,CAAC,CAAC;MACF,IAAIT,MAAO,CAACI,SAAS,CAACI,QAAQ,CAAC,aAAa,CAAC,EAAE;QAC7CR,MAAO,CAACI,SAAS,CAACK,MAAM,CAAC,aAAa,CAAC;;KAE1C,MAAM;MACLX,YAAY,CAACQ,OAAO,CAAEC,EAAE,IAAI;QAC1BA,EAAE,CAACH,SAAS,CAACC,GAAG,CAAC,aAAa,CAAC;MACjC,CAAC,CAAC;MACFH,QAAQ,CAACI,OAAO,CAAEC,EAAE,IAAI;QACtBA,EAAE,CAACH,SAAS,CAACC,GAAG,CAAC,cAAc,CAAC;MAClC,CAAC,CAAC;MACFL,MAAO,CAACI,SAAS,CAACC,GAAG,CAAC,aAAa,CAAC;;EAExC;EAEAK,mBAAmBA,CAAA;IACjB,IAAI,IAAI,CAAChB,OAAO,CAACS,OAAO,CAAC,SAAS,CAAC,IAAI,MAAM,EAAE;MAC7C,IAAI,CAACT,OAAO,CAACiB,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC;MACxC,IAAI,CAAClB,WAAW,CAACmB,IAAI,CAAC,KAAK,CAAC;KAC7B,MAAM;MACL,IAAI,CAAClB,OAAO,CAACiB,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC;MACvC,IAAI,CAAClB,WAAW,CAACmB,IAAI,CAAC,IAAI,CAAC;;EAE/B;EAAC,QAAAC,CAAA,G;qBA5CUvB,WAAW,EAAAwB,EAAA,CAAAC,QAAA,CAGF3B,QAAQ;EAAA;EAAA,QAAA4B,EAAA,G;WAHjB1B,WAAW;IAAA2B,OAAA,EAAX3B,WAAW,CAAA4B,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}