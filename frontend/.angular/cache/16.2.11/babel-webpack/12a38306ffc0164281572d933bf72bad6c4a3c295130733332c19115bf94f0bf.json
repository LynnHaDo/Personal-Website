{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class MenuService {\n  constructor() {\n    this.isDayToggle = new BehaviorSubject(false);\n  }\n  toggleNightDayState() {\n    this.isDayToggle.subscribe(data => {\n      if (data) {\n        this.isDayToggle.next(false);\n      } else {\n        this.isDayToggle.next(true);\n      }\n    });\n  }\n  static #_ = this.ɵfac = function MenuService_Factory(t) {\n    return new (t || MenuService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MenuService,\n    factory: MenuService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","MenuService","constructor","isDayToggle","toggleNightDayState","subscribe","data","next","_","_2","factory","ɵfac","providedIn"],"sources":["/Users/linhdo/Documents/Personal-Website/Personal-Website/frontend/src/app/services/menu.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MenuService {\n    isDayToggle: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    constructor() { }\n\n    toggleNightDayState(){\n        this.isDayToggle.subscribe(data => {\n            if (data){\n                this.isDayToggle.next(false);\n                \n            } else {\n                this.isDayToggle.next(true);\n            }\n        })\n    }\n}\n"],"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,WAAW;EAEpBC,YAAA;IADA,KAAAC,WAAW,GAA6B,IAAIH,eAAe,CAAU,KAAK,CAAC;EAC3D;EAEhBI,mBAAmBA,CAAA;IACf,IAAI,CAACD,WAAW,CAACE,SAAS,CAACC,IAAI,IAAG;MAC9B,IAAIA,IAAI,EAAC;QACL,IAAI,CAACH,WAAW,CAACI,IAAI,CAAC,KAAK,CAAC;OAE/B,MAAM;QACH,IAAI,CAACJ,WAAW,CAACI,IAAI,CAAC,IAAI,CAAC;;IAEnC,CAAC,CAAC;EACN;EAAC,QAAAC,CAAA,G;qBAbQP,WAAW;EAAA;EAAA,QAAAQ,EAAA,G;WAAXR,WAAW;IAAAS,OAAA,EAAXT,WAAW,CAAAU,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}