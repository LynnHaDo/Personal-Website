{"ast":null,"code":"import { DOCUMENT } from \"@angular/common\";\nimport { BehaviorSubject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nexport class MenuService {\n  constructor(document) {\n    this.document = document;\n    this.isDayToggle = new BehaviorSubject(true);\n    this.storage = sessionStorage;\n  }\n  changeNightDayTheme() {\n    const document = this.document.getElementsByTagName(\"html\");\n    const navItems = this.document.querySelectorAll(\".menus li\");\n    const socialMediaIcons = this.document.querySelectorAll(\".social-media a img\");\n    if (this.storage.getItem(\"dayMode\") == \"true\") {\n      if (document[0].classList.contains(\"night-theme\")) {\n        document[0].classList.remove(\"night-theme\");\n      }\n      navItems.forEach(el => {\n        if (el.classList.contains(\"filter-white\")) {\n          el.classList.remove(\"filter-white\");\n        }\n      });\n      socialMediaIcons.forEach(el => {\n        if (el.classList.contains(\"fil\")) ;\n      });\n    } else {\n      document[0].classList.add(\"night-theme\");\n      navItems.forEach(el => {\n        el.classList.add(\"filter-white\");\n      });\n    }\n  }\n  toggleNightDayState() {\n    if (this.storage.getItem(\"dayMode\") == \"true\") {\n      this.storage.setItem(\"dayMode\", \"false\");\n      this.isDayToggle.next(false);\n    } else {\n      this.storage.setItem(\"dayMode\", \"true\");\n      this.isDayToggle.next(true);\n    }\n  }\n  static #_ = this.ɵfac = function MenuService_Factory(t) {\n    return new (t || MenuService)(i0.ɵɵinject(DOCUMENT));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MenuService,\n    factory: MenuService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"names":["DOCUMENT","BehaviorSubject","MenuService","constructor","document","isDayToggle","storage","sessionStorage","changeNightDayTheme","getElementsByTagName","navItems","querySelectorAll","socialMediaIcons","getItem","classList","contains","remove","forEach","el","add","toggleNightDayState","setItem","next","_","i0","ɵɵinject","_2","factory","ɵfac","providedIn"],"sources":["/Users/linhdo/Documents/Personal-Website/Personal-Website/frontend/src/app/services/menu.service.ts"],"sourcesContent":["import { DOCUMENT } from \"@angular/common\";\nimport { Inject, Injectable } from \"@angular/core\";\nimport { BehaviorSubject } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class MenuService {\n  isDayToggle: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\n  storage: Storage = sessionStorage;\n  constructor(@Inject(DOCUMENT) private document: Document) {}\n\n  changeNightDayTheme() {\n    const document = this.document.getElementsByTagName(\"html\");\n    const navItems = this.document.querySelectorAll(\".menus li\");\n    const socialMediaIcons = this.document.querySelectorAll(\".social-media a img\")\n    if (this.storage.getItem(\"dayMode\") == \"true\") {\n      if (document[0].classList.contains(\"night-theme\")) {\n        document[0].classList.remove(\"night-theme\");\n      }\n      navItems.forEach((el) => {\n        if (el.classList.contains(\"filter-white\")) {\n          el.classList.remove(\"filter-white\");\n        }\n      });\n      socialMediaIcons.forEach((el) => {\n        if (el.classList.contains(\"fil\"))\n      })\n    } else {\n      document[0].classList.add(\"night-theme\");\n      navItems.forEach((el) => {\n        el.classList.add(\"filter-white\");\n      });\n    }\n  }\n\n  toggleNightDayState() {\n    if (this.storage.getItem(\"dayMode\") == \"true\") {\n      this.storage.setItem(\"dayMode\", \"false\");\n      this.isDayToggle.next(false);\n    } else {\n      this.storage.setItem(\"dayMode\", \"true\");\n      this.isDayToggle.next(true);\n    }\n  }\n}\n\n/**\n *       mainSections.forEach((el) => {\n        if (el.classList.contains(\"night-theme\")) {\n          el.classList.remove(\"night-theme\");\n        }\n      });\n\n            if (header!.classList.contains(\"night-theme\")) {\n        header!.classList.remove(\"night-theme\");\n      }\n       mainSections.forEach((el) => {\n        el.classList.add(\"night-theme\");\n      });\n            header!.classList.add(\"night-theme\");\n */\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,iBAAiB;AAE1C,SAASC,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,WAAW;EAGtBC,YAAsCC,QAAkB;IAAlB,KAAAA,QAAQ,GAARA,QAAQ;IAF9C,KAAAC,WAAW,GAA6B,IAAIJ,eAAe,CAAU,IAAI,CAAC;IAC1E,KAAAK,OAAO,GAAYC,cAAc;EAC0B;EAE3DC,mBAAmBA,CAAA;IACjB,MAAMJ,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACK,oBAAoB,CAAC,MAAM,CAAC;IAC3D,MAAMC,QAAQ,GAAG,IAAI,CAACN,QAAQ,CAACO,gBAAgB,CAAC,WAAW,CAAC;IAC5D,MAAMC,gBAAgB,GAAG,IAAI,CAACR,QAAQ,CAACO,gBAAgB,CAAC,qBAAqB,CAAC;IAC9E,IAAI,IAAI,CAACL,OAAO,CAACO,OAAO,CAAC,SAAS,CAAC,IAAI,MAAM,EAAE;MAC7C,IAAIT,QAAQ,CAAC,CAAC,CAAC,CAACU,SAAS,CAACC,QAAQ,CAAC,aAAa,CAAC,EAAE;QACjDX,QAAQ,CAAC,CAAC,CAAC,CAACU,SAAS,CAACE,MAAM,CAAC,aAAa,CAAC;;MAE7CN,QAAQ,CAACO,OAAO,CAAEC,EAAE,IAAI;QACtB,IAAIA,EAAE,CAACJ,SAAS,CAACC,QAAQ,CAAC,cAAc,CAAC,EAAE;UACzCG,EAAE,CAACJ,SAAS,CAACE,MAAM,CAAC,cAAc,CAAC;;MAEvC,CAAC,CAAC;MACFJ,gBAAgB,CAACK,OAAO,CAAEC,EAAE,IAAI;QAC9B,IAAIA,EAAE,CAACJ,SAAS,CAACC,QAAQ,CAAC,KAAK,CAAC,EAClC;MAAA,CAAC,CAAC;KACH,MAAM;MACLX,QAAQ,CAAC,CAAC,CAAC,CAACU,SAAS,CAACK,GAAG,CAAC,aAAa,CAAC;MACxCT,QAAQ,CAACO,OAAO,CAAEC,EAAE,IAAI;QACtBA,EAAE,CAACJ,SAAS,CAACK,GAAG,CAAC,cAAc,CAAC;MAClC,CAAC,CAAC;;EAEN;EAEAC,mBAAmBA,CAAA;IACjB,IAAI,IAAI,CAACd,OAAO,CAACO,OAAO,CAAC,SAAS,CAAC,IAAI,MAAM,EAAE;MAC7C,IAAI,CAACP,OAAO,CAACe,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC;MACxC,IAAI,CAAChB,WAAW,CAACiB,IAAI,CAAC,KAAK,CAAC;KAC7B,MAAM;MACL,IAAI,CAAChB,OAAO,CAACe,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC;MACvC,IAAI,CAAChB,WAAW,CAACiB,IAAI,CAAC,IAAI,CAAC;;EAE/B;EAAC,QAAAC,CAAA,G;qBArCUrB,WAAW,EAAAsB,EAAA,CAAAC,QAAA,CAGFzB,QAAQ;EAAA;EAAA,QAAA0B,EAAA,G;WAHjBxB,WAAW;IAAAyB,OAAA,EAAXzB,WAAW,CAAA0B,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}